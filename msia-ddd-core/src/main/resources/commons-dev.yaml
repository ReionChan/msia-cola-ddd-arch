spring:

  # 开发环境配置
  config:
    activate:
      # 仅在 dev 环境激活本配置
      on-profile: dev

  jackson:
    # 日期格式
    date-format: yyyy-MM-dd HH:mm:ss
    # 时区
    time-zone: GMT+8
    # 忽略 null 的属性值
    default-property-inclusion: NON_NULL

  data:
    redis:
      url: ${REDIS_URL:redis://:reionchan@localhost:6379}
      database: 0

  # 缓存配置
  cache:
    # 启用自动化装配的 caffeine 本地缓存
    type: caffeine
    caffeine:
      # 默认容量为 64 最大 1000 且缓存过期时间 120s 的本地缓存
      spec: initialCapacity=64,maximumSize=1000,expireAfterWrite=120s

  cloud:
    # === Spring Cloud 服务发现 ===
    discovery:
      enabled: true

    # === Spring Cloud 负载均衡 ===
    loadbalancer:
      nacos:
        enabled: true

    # === Spring Cloud 服务注册 ===
    service-registry:
      auto-registration:
        enabled: true

    # === Nacos 中间件配置 ===
    nacos:
      # dev 环境关闭 nacos 配置
      config:
        enabled: false
      # dev 环境使用 nacos 注册服务
      discovery:
        server-addr: ${NACOS_ADDR:127.0.0.1:8848}

    # === OpenFeign 相关配置 ===
    openfeign:
      # 激活使用 OkHttp，默认 JDK 的 HttpURLConnection 不支持 PATCH 请求
      okhttp:
        enabled: true
      # 关闭懒加载
      lazy-attributes-resolution: false

    # === Alibaba Sentinel 相关配置 ===
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080

# Seata 客户端配置
seata:
  # 应用在 Seata 中的 ID 名称，默认为 spring.application.name
  #application-id: ${spring.application.name}-seata
  tx_service_group: default_tx_group
  # 指定 Seata 事务分组
  service:
    vgroup-mapping:
      default_tx_group: default
  # Seata 客户端配置由 Nacos 加载
  config:
    type: nacos
    nacos:
      server-addr: ${NACOS_ADDR:127.0.0.1:8848}
      group : "DEFAULT_GROUP"
      namespace:
      dataId: "msia-seata-client"
      username:
      password:
  # Seata 客户端注册配置
  registry:
    type: nacos
    nacos:
      # 用于在注册中心查询 Seata 服务端的名称
      application: seata-server
      server-addr: ${NACOS_ADDR:127.0.0.1:8848}
      group : "DEFAULT_GROUP"
      namespace:
      username:
      password:
      context-path:

# === SpringDoc ===
springdoc:
  # 网关服务地址
  gateway:
    url: 127.0.0.1:9000

msia:
  auth:
    # URL 白名单
    skip-path:
      msia-common:
        - /v3/api-docs/**
        - /**/v3/api-docs
        - /actuator/health
      msia-users:
        - /**/user/login
        - /**/user/register
        - /**/user/refresh-token
    # 系统 Rest 调用
    system-rest-path:
      - method: PATCH
        pattern: "/rpc/order/\\d{1,}"
      - method: GET
        pattern: "/rpc/order/admin/\\d{1,}"
      - method: POST
        pattern: "/rpc/payment"
      - method: GET
        pattern: "/rpc/products"
      - method: POST
        pattern: "/rpc/wallet"
      - method: GET
        pattern: "/rpc/user/\\d{1,}"
    # 系统 Rest 调用虚拟管理员账号
    virtual-admin:
      id: 0
      user-name: robot-admin
      roles: user,admin

# 日志处理
logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(-){faint} %clr([%t]){faint} %clr(%-40logger{39}){cyan}[%line]%clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level:
    io.github.reionchan.feign: DEBUG

# === Spring 环境引入 Maven 变量 ===
# 使用 @ 符号包含 maven 变量
# 详细：https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.3-Release-Notes#maven-resources-filtering
maven:
  version: "@project.version@"